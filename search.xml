<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java Best Practices</title>
      <link href="2021/01/12/Java-Best-Practices/"/>
      <url>2021/01/12/Java-Best-Practices/</url>
      
        <content type="html"><![CDATA[<h2 id="Programing-Principles"><a href="#Programing-Principles" class="headerlink" title="Programing Principles"></a>Programing Principles</h2><ul><li>KISS - “Keep It Simple, Stupid” </li><li>DRY - “Don’t Repeat Yourself”</li><li>YAGNI - “You Ain’t Gonna Need It” - 필요할 때에 구현해라</li><li>Avoid premature optimization - 최적화는 뒤로 미뤄라</li><li>Single responsibility</li><li>Composition over Inheritance - 상속보다는 구성</li><li>Fail fast, fail hard</li></ul><h2 id="Packages"><a href="#Packages" class="headerlink" title="Packages"></a>Packages</h2><ol><li>technical layers package<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/project</span><br><span class="line">    ├─ controller</span><br><span class="line">    │     ├─ BoardController</span><br><span class="line">    │     ├─ UserController</span><br><span class="line">    │     ├─ ...</span><br><span class="line">    ├─ dao</span><br><span class="line">    │     ├─ BoardDao</span><br><span class="line">    │     ├─ UserDao</span><br><span class="line">    │     ├─ ...</span><br><span class="line">    ├─ service</span><br><span class="line">    │     ├─ BoardService</span><br><span class="line">    │     ├─ UserService</span><br><span class="line">    │     ├─ ...</span><br></pre></td></tr></table></figure></li><li>domain concern package<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/project</span><br><span class="line">    ├─ User</span><br><span class="line">    │     ├─ UserController</span><br><span class="line">    │     ├─ UserService</span><br><span class="line">    │     ├─ UserDao</span><br><span class="line">    ├─ Board</span><br><span class="line">    │     ├─ BoardController</span><br><span class="line">    │     ├─ BoardService</span><br><span class="line">    │     ├─ BoardDao      </span><br></pre></td></tr></table></figure><blockquote><p>개인적으로 기술적 레이어 보단 도메인 개념을 선호함<br></p></blockquote></li></ol><h2 id="Classes"><a href="#Classes" class="headerlink" title="Classes"></a>Classes</h2><h3 id="static"><a href="#static" class="headerlink" title="static"></a>static</h3><ul><li>static 클래스의 인스턴스화를 막아라 -&gt; private constructor</li><li>should be stateless, immutable, not allow subclassing, and thread-safe</li></ul><h3 id="inheritance"><a href="#inheritance" class="headerlink" title="inheritance"></a>inheritance</h3><ul><li><p>상속보다는 구성을 사용하라</p><blockquote><p>effective java의 유명한 hashset.add() 예제가 있음 ㅎㅎ<br><br>상속은 a is b 일때 타입을 강제할 때만 사용하자<br></p></blockquote></li><li><p>Do not expose protected field</p></li><li><p>class 변수에 final를 사용할 수 있다면 하는게 좋다</p></li><li><p>상속할 필요가 없는 class는 final class로 만들어라. 메서드도 마찬가지</p></li><li><p>빈 기본 생성자는 만들지마라 (자바가 알아서 만들어 줌)</p></li></ul><h3 id="Interfaces"><a href="#Interfaces" class="headerlink" title="Interfaces"></a>Interfaces</h3><ul><li>Do not use the constant interface pattern<blockquote><p>static class를 사용하자</p></blockquote></li><li>Avoid Interface overuse<blockquote><p>확장 가능성이 없는데 interface 만들고, abstract class 만들고 구현체 만드는 것은 오버 엔지니어링</p></blockquote></li><li>interface는 최대한 작게 유지. client는 사용법만 알면됨</li></ul><h2 id="Generics"><a href="#Generics" class="headerlink" title="Generics"></a>Generics</h2><ul><li>가능하면 base class 나 interface 대신에 type inference를 리턴하라<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> &lt;T extends MyObject&gt; <span class="function">T <span class="title">getObject</span><span class="params">(<span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (T) factory.create(type);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySpecialObject</span> <span class="keyword">extends</span> <span class="title">MyObject</span>&lt;<span class="title">SpecialType</span>&gt; </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">MySpecialObject</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">super</span>(Collections.emptyList());   <span class="comment">// This is ugly, as we loose type</span></span><br><span class="line">     <span class="keyword">super</span>(Collections.EMPTY_LIST();    <span class="comment">// This is just dumb</span></span><br><span class="line">     <span class="comment">// But this is beauty</span></span><br><span class="line">     <span class="keyword">super</span>(<span class="keyword">new</span> ArrayList&lt;SpecialType&gt;());    </span><br><span class="line">     <span class="keyword">super</span>(Collections.&lt;SpecialType&gt;emptyList());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>PECS 공식 : Producer-extends, Consumer-super</li></ul><h2 id="Exceptions"><a href="#Exceptions" class="headerlink" title="Exceptions"></a>Exceptions</h2><ul><li>복구 가능한 예외는 checked Exception을 사용</li></ul><ol><li>BAD<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Integer value = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span>(NumberFormatException e) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(value == <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="comment">//handle bad string</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//business logic</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>GOOD<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( (str != <span class="keyword">null</span>) &amp;&amp; str.matches(<span class="string">&quot;-?\\d++&quot;</span>) ) &#123;</span><br><span class="line">    Integer value = Integer.valueOf(str);</span><br><span class="line">    <span class="comment">//business logic</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//handle bad string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>예외처리는 도메인 레벨에서 하자</li></ul><ol><li>BAD<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          ps = conn.prepareStatement(<span class="string">&quot;SELECT * from users&quot;</span>);</span><br><span class="line">          rs = ps.executeQuery();</span><br><span class="line">          <span class="comment">//... return result</span></span><br><span class="line">        &#125;<span class="keyword">catch</span>&#123;</span><br><span class="line">          log.error(<span class="string">&quot;exception~&quot;</span>);</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//close resource</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>GOOD<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          ps = conn.prepareStatement(<span class="string">&quot;SELECT * from users&quot;</span>);</span><br><span class="line">          rs = ps.executeQuery();</span><br><span class="line">          <span class="comment">//... return result</span></span><br><span class="line">        &#125;<span class="keyword">catch</span>&#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> DataBaseLevelExcpetion(e);</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//close resource</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>로깅은 에러발생 시점이 아니라 예외 핸들링 시점에 해야한다</li><li>Use Standard Exception</li><li>에러 코드 리턴보다 Exception을 사용해라</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> Practice </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="2021/01/11/Hexo/"/>
      <url>2021/01/11/Hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-Quick-Start"><a href="#Hexo-Quick-Start" class="headerlink" title="Hexo Quick Start"></a>Hexo Quick Start</h1><h3 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h3><ul><li><a href="http://nodejs.org/">Node.js</a></li><li><a href="http://git-scm.com/">Git</a></li><li>Create Github repository [username.github.io]</li></ul><h3 id="1-Install-Hexo"><a href="#1-Install-Hexo" class="headerlink" title="1.Install Hexo"></a>1.Install Hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="2-initialize"><a href="#2-initialize" class="headerlink" title="2.initialize"></a>2.initialize</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h3 id="3-configuration-config-yml-file"><a href="#3-configuration-config-yml-file" class="headerlink" title="3.configuration _config.yml file"></a>3.configuration _config.yml file</h3><p>more info: <a href="https://hexo.io/docs/configuration">Configuration</a></p><h3 id="4-Create-a-new-post"><a href="#4-Create-a-new-post" class="headerlink" title="4.Create a new post"></a>4.Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="5-Run-server"><a href="#5-Run-server" class="headerlink" title="5.Run server"></a>5.Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><ul><li>connect localhost:4000</li></ul><h3 id="6-Generate-static-files-And-Deploy-to-remote-Repository"><a href="#6-Generate-static-files-And-Deploy-to-remote-Repository" class="headerlink" title="6.Generate static files And Deploy to remote Repository"></a>6.Generate static files And Deploy to remote Repository</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><h3 id="Issue"><a href="#Issue" class="headerlink" title="Issue"></a>Issue</h3><p>if ERROR Deployer not found: git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>_config.yml plugins add</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plugins:</span><br><span class="line">- hexo-deployer-git</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Quick Start </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
